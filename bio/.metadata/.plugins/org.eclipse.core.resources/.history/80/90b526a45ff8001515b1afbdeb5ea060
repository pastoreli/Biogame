package br.com.etecGuainazes.BioGame.View;

import java.awt.Color;
import java.awt.Font;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.Random;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.SwingConstants;
import javax.swing.border.LineBorder;

import br.com.etecGuainazes.BioGame.Controller.LogicaMemoria;

public class Sintomas extends JPanel{

	LogicaMemoria logica = new LogicaMemoria();
	Jogos jogos;
	
	static  int w = (int) Toolkit.getDefaultToolkit ().getScreenSize ().getWidth();
	static int h = (int) Toolkit.getDefaultToolkit ().getScreenSize ().getHeight ();
	
	//arrasta
	private static final long serialVersionUID = 1L; 
    private int x;  
    private int y; 
    
    JLabel div, resultado;
    JButton verifica;
    
    JButton sintomasB[];
    
    String descSintomas[];
    int cont[], roleta, qtdSintomas;
	
	public Sintomas(){
		
		this.setLayout(null);
		this.setBounds(w,0,w+2,h-140);
		this.setBackground(new Color(255,255,255));
		
		if(logica.nivel == 2){
			
			int centralizar = (this.getWidth()/2) - (((this.getWidth()/100)*15)/2)*5;
			
			sintomasB = new JButton[15];
			descSintomas = new String[]{"Febre alta", "Dores de cabeça", "Dores atraz dos olhos", "Perda de apetite", "Manchas na pele", "Náuseas e vômito", "Tonturas", "Cansaço", "Moleza e dor no corpo", "Dor nos ossos e articulaçoes", "oie", "tchal", "bye", "hello", "hi"};
			cont = new int[15];
			qtdSintomas = 10;
			
			Random espalhar = new Random();
			int roda=0;
			
			while(roda<sintomasB.length){
				
				roleta = espalhar.nextInt(sintomasB.length);
					
					if(cont[roleta]==0){
					
						cont[roleta] = 1;
						sintomasB[roda] = new JButton(descSintomas[roleta]);
						
						if(roda == 0){
							sintomasB[roda].setBounds(centralizar, (this.getHeight()/2)+50, (this.getWidth()/100)*15, (this.getHeight()/100)*8);
						}else if(roda < 5){
							sintomasB[roda].setBounds(sintomasB[roda-1].getLocation().x+((this.getWidth()/100)*15)+8, (this.getHeight()/2)+50, (this.getWidth()/100)*15, (this.getHeight()/100)*8);
						}else if(roda == 5){
							sintomasB[roda].setBounds(centralizar, sintomasB[roda-1].getLocation().y+((this.getHeight()/100)*8)+10, (this.getWidth()/100)*15, (this.getHeight()/100)*8);
						}else if(roda < 10){
							sintomasB[roda].setBounds(sintomasB[roda-1].getLocation().x+((this.getWidth()/100)*15)+8, sintomasB[roda-1].getLocation().y, (this.getWidth()/100)*15, (this.getHeight()/100)*8);
						}else if(roda == 10){
							sintomasB[roda].setBounds(centralizar, sintomasB[roda-1].getLocation().y+((this.getHeight()/100)*8)+10, (this.getWidth()/100)*15, (this.getHeight()/100)*8);
						}else{
							sintomasB[roda].setBounds(sintomasB[roda-1].getLocation().x+((this.getWidth()/100)*15)+8, sintomasB[roda-1].getLocation().y, (this.getWidth()/100)*15, (this.getHeight()/100)*8);
						}
						
						sintomasB[roda].setBackground(new Color(255,255,255));
						sintomasB[roda].setForeground(jogos.cores);
						sintomasB[roda].setFont(new Font("Century Gothic",  Font. PLAIN, (sintomasB[0].getWidth()/14)));
						sintomasB[roda].setBorder(new LineBorder(jogos.cores, 2, true));
						sintomasB[roda].setHorizontalAlignment(SwingConstants.CENTER);
						sintomasB[roda].setVerticalAlignment(SwingConstants.CENTER);
						sintomasB[roda].setRequestFocusEnabled(false);
						sintomasB[roda].setRolloverEnabled(false);
						sintomasB[roda].addMouseMotionListener(new MouseMotionListener(){

							@Override
							public void mouseDragged(MouseEvent e) {
								
									if (e.getX() - x == 0 || e.getX() - x == 0) {  
						                x = e.getX();  
						            }  
						            if (e.getY() - y == 0 || e.getY() - y == 0) {  
						                y = e.getY();  
						            }  
						            sintomasB[roleta].setLocation(sintomasB[roleta].getX() + (e.getX() - x), sintomasB[roleta].getY() + (e.getY() - y)); 
								
							}

							@Override
							public void mouseMoved(MouseEvent e) {
							}

						});
						sintomasB[roda].addMouseListener(new MouseListener(){

							@Override
							public void mouseClicked(MouseEvent e) {
								// TODO Auto-generated method stub
								
							}

							@Override
							public void mouseEntered(MouseEvent e) {
								// TODO Auto-generated method stub
								
							}

							@Override
							public void mouseExited(MouseEvent e) {
								// TODO Auto-generated method stub
								
							}

							@Override
							public void mousePressed(MouseEvent e) {
								
								
								for(int i=0; i<sintomasB.length;i++){
									
									if(((JButton)e.getSource()).getText().equals(sintomasB[i].getText())){
										
										roleta = i;
										
									}
									
								}

									sintomasB[roleta].setBackground(new Color(255,255,255));
									sintomasB[roleta].setBorder(new LineBorder(jogos.cores2, 2, true));
									sintomasB[roleta].setForeground(jogos.cores2);
								
									 x = e.getX();  
							         y = e.getY(); 
								
							}

							@Override
							public void mouseReleased(MouseEvent e) {
								
								sintomasB[roleta].setBorder(new LineBorder(jogos.cores, 2, true));
								sintomasB[roleta].setForeground(jogos.cores2);
								
							}
								
						});  
						
						this.add(sintomasB[roda]);
						
						roda++;
					
					}
				
			}
			
		}
		
		div = new JLabel();
		div.setOpaque(true);
		div.setBounds(0,this.getHeight()/2,this.getWidth(),2);
		div.setBackground(jogos.cores);
		
		
		resultado = (new JLabel("0/10"));
		resultado.setBounds(this.getWidth()-200,20,200,100);
		resultado.setForeground(jogos.cores);
		resultado.setFont(new Font("Century Gothic",  Font. PLAIN,  50));
		resultado.setHorizontalAlignment(SwingConstants.CENTER);
		resultado.setVerticalAlignment(SwingConstants.CENTER);
		this.add(resultado);
		
		verifica = (new JButton("Verificar"));
		verifica.setBounds((this.getWidth()/2)-50,(this.getHeight()/2)-15,100,30);
		verifica.setBackground(new Color(255,255,255));
		verifica.setForeground(jogos.cores);
		verifica.setFont(new Font("Century Gothic",  Font. PLAIN,  18));
		verifica.setBorder(new LineBorder(jogos.cores, 2, false));
		verifica.addMouseListener(new MouseAdapter() {
			 @Override
			 public void mouseEntered(MouseEvent e) {
				 
				 verifica.setBackground(jogos.cores);
				 verifica.setForeground(new Color(255,255,255));
				 
			 }
			 @Override
			 public void mouseExited(MouseEvent e) {
				 
				 verifica.setBackground(new Color(255,255,255));
				 verifica.setForeground(jogos.cores);
				 
			}
		});
		verifica.addActionListener(new ActionListener(){

			public void actionPerformed(ActionEvent e) {
				
				
				
			}
					
		});
		
		this.add(verifica);
		this.add(div);
		
	}
	
}
