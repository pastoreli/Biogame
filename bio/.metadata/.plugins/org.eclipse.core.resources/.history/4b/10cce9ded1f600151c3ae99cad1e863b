package br.com.etecGuainazes.BioGame.Controller;

import java.awt.Font;
import java.awt.Image;
import java.util.Random;
import java.util.Timer;
import java.util.TimerTask;

import javax.swing.ImageIcon;

import br.com.etecGuainazes.BioGame.View.ControladorFrame;

public class LogicaMemoria {

	ControladorFrame controle;
	
	public static int nivel;
	
	public static int numeroB;
	
	public static boolean virada = false, iniciou = false;
	
	int delay = 1;
	
	int interval = 100;
	
	// imagens dos botões
	String[] imgs;
	String imgB[];
	boolean[] verificaV;
	
	Timer timer = new Timer();
	
	//para o jogo
	int guardaN;
	boolean acabouRotacao;
	
	public void start(){
		
		if(iniciou == false){
			
			acabouRotacao = false;
			
		}
		
		if(acabouRotacao == false){
		
			acabouRotacao = true;
			
			if(nivel == 1){
	
				if(iniciou == false){
					
					iniciou = true;
					
					imgs = new String[]{"imgM/garrafa.jpg", "imgM/caixa.jpg", "imgM/pnel.jpg", "imgM/vaso.jpg", "imgM/garrafa.jpg", "imgM/caixa.jpg", "imgM/pnel.jpg", "imgM/vaso.jpg"};
					
					imgB = new String[8];
				
					verificaV = new boolean[]{false, false, false, false, false, false, false, false};
					
					Random espalhar = new Random();
					
					int roda=0;
					
					while(roda<8){
					
						int roleta = espalhar.nextInt(7);
						
						int valida=0;
						
						for(int i=0; i<8; i++){
						
							if(i == roda){
								
								imgB[i] = imgs[roleta];
								roda++;
								break;
								
							}
							
							if(imgB[i].equals(imgs[roleta])){
								
								if(valida < 1){
									
									valida++;
									
								}else{
									
									break;
									
								}
								
							}
							
						}
						
					}
					
				}
				
				if(verificaV[numeroB] == false){
				
					timer.scheduleAtFixedRate(new TimerTask(){
						
						int c = 0;
						
						public void run(){
							
							if(c == 0){
								
								ImageIcon imgCapa = new ImageIcon("imgM/capa.jpg");
								controle.pMemoria.pecas[numeroB].setIcon(new ImageIcon(imgCapa.getImage().getScaledInstance(controle.pMemoria.pecas[numeroB].getWidth()/3,controle.pMemoria.pecas[numeroB].getHeight(), Image.SCALE_DEFAULT)));
								
								c++;
								
							}else{
								
								if(c==1){
									
									ImageIcon imgCapa = new ImageIcon("imgM/capa.jpg");
									controle.pMemoria.pecas[numeroB].setIcon(new ImageIcon(imgCapa.getImage().getScaledInstance(controle.pMemoria.pecas[numeroB].getWidth()/5,controle.pMemoria.pecas[numeroB].getHeight(), Image.SCALE_DEFAULT)));
									
									c++;
									
								}else{
									
									if(c==2){
										
										ImageIcon imgCapa = new ImageIcon(imgB[numeroB]);
										controle.pMemoria.pecas[numeroB].setIcon(new ImageIcon(imgCapa.getImage().getScaledInstance(controle.pMemoria.pecas[numeroB].getWidth()/5,controle.pMemoria.pecas[numeroB].getHeight(), Image.SCALE_DEFAULT)));
										
										c++;
										
									}else{
										
										if(c==3){
											
											ImageIcon imgCapa = new ImageIcon(imgB[numeroB]);
											controle.pMemoria.pecas[numeroB].setIcon(new ImageIcon(imgCapa.getImage().getScaledInstance(controle.pMemoria.pecas[numeroB].getWidth()/3,controle.pMemoria.pecas[numeroB].getHeight(), Image.SCALE_DEFAULT)));
											  
											c++;
											
										}else{
											
											ImageIcon imgCapa = new ImageIcon(imgB[numeroB]);
											controle.pMemoria.pecas[numeroB].setIcon(new ImageIcon(imgCapa.getImage().getScaledInstance(controle.pMemoria.pecas[numeroB].getWidth(),controle.pMemoria.pecas[numeroB].getHeight(), Image.SCALE_DEFAULT)));
											
											cancel();
											
											nivel1();
											
											acabouRotacao = true;
											
										}
										
									}
									
								}
								
							}
							
						}
						
					},delay,interval);
					
				}
					
			}else if(nivel == 2){
					
				imgs = new String[]{"imgM/garrafa.jpg", "imgM/caixa.jpg", "imgM/pnel.jpg", "imgM/vaso.jpg", "imgM/lixo.png", "imgM/garrafa.jpg", "imgM/caixa.jpg", "imgM/pnel.jpg", "imgM/vaso.jpg", "imgM/lixo.png"};
					
				nivel2();
					
			}else{
					
				switch(nivel){
				
				case 3:
				
					imgs = new String[]{"imgM/garrafa.jpg", "imgM/caixa.jpg", "imgM/pnel.jpg", "imgM/vaso.jpg", "imgM/lixo.png", "imgM/grama.png", "imgM/garrafa.jpg", "imgM/caixa.jpg", "imgM/pnel.jpg", "imgM/vaso.jpg", "imgM/lixo.png", "imgM/grama.png"};
					
				break;
				
				case 4:
					
					imgs = new String[]{"imgM/garrafa.jpg", "imgM/caixa.jpg", "imgM/pnel.jpg", "imgM/vaso.jpg", "imgM/lixo.png", "imgM/grama.png", "imgM/garrafa.jpg", "imgM/caixa.jpg", "imgM/pnel.jpg", "imgM/vaso.jpg", "imgM/lixo.png", "imgM/grama.png"};
					
				break;
				
				case 5:
				
					imgs = new String[]{"imgM/garrafa.jpg", "imgM/caixa.jpg", "imgM/pnel.jpg", "imgM/vaso.jpg", "imgM/lixo.png", "imgM/grama.png", "imgM/garrafa.jpg", "imgM/caixa.jpg", "imgM/pnel.jpg", "imgM/vaso.jpg", "imgM/lixo.png", "imgM/grama.png"};
				
				break;
				
				}
				
				outrosNiveis();
			
			}
			
		}
		
	}
	
	//nivel1
	
	public void nivel1(){
		
		//validação
		if(virada == false){
			
				
				virada = true;
				guardaN = numeroB;
				verificaV[numeroB] = true;
			
		}else{
				
			virada = false;
				
			if(imgB[numeroB].equals(imgB[guardaN])){
					
				verificaV[numeroB] = true;
					
			}else{
					
				ImageIcon imgCapa = new ImageIcon("imgM/capa.jpg");
				controle.pMemoria.pecas[numeroB].setIcon(new ImageIcon(imgCapa.getImage().getScaledInstance(controle.pMemoria.pecas[numeroB].getWidth(),controle.pMemoria.pecas[numeroB].getHeight(), Image.SCALE_DEFAULT)));
				controle.pMemoria.pecas[guardaN].setIcon(new ImageIcon(imgCapa.getImage().getScaledInstance(controle.pMemoria.pecas[numeroB].getWidth(),controle.pMemoria.pecas[numeroB].getHeight(), Image.SCALE_DEFAULT)));
				verificaV[guardaN] = false;
					
			}
			
		}
		
	}
	
	//nivel2
	String imgB2[] = new String[10];
	Boolean[] verificaV2 = {false, false, false, false, false, false, false, false, false, false};
	
	public void nivel2(){
		
		if(iniciou == false){
			
			iniciou = true;
			
			Random espalhar = new Random();
			
			int roda=0;
			
			while(roda<10){
			
				int roleta = espalhar.nextInt(9);
				
				int valida=0;
				
				for(int i=0; i<10; i++){
				
					if(i == roda){
						
						imgB2[i] = imgs[roleta];
						roda++;
						break;
						
					}
					
					if(imgB2[i].equals(imgs[roleta])){
						
						if(valida < 1){
							
							valida++;
							
						}else{
							
							break;
							
						}
						
					}
					
				}
				
			}	
			
		}
		
		//validação
		if(virada == false){

			if(verificaV2[numeroB] == false){
			
				ImageIcon imgCapa = new ImageIcon(imgB2[numeroB]);
				controle.pMemoria.pecas[numeroB].setIcon(new ImageIcon(imgCapa.getImage().getScaledInstance(controle.pMemoria.pecas[numeroB].getWidth(),controle.pMemoria.pecas[numeroB].getHeight(), Image.SCALE_DEFAULT)));
				virada = true;
				guardaN = numeroB;
				verificaV2[numeroB] = true;
			
			}
			
		}else{
			
			if(verificaV2[numeroB] == false){
				
				ImageIcon imgCapa = new ImageIcon(imgB2[numeroB]);
				controle.pMemoria.pecas[numeroB].setIcon(new ImageIcon(imgCapa.getImage().getScaledInstance(controle.pMemoria.pecas[numeroB].getWidth(),controle.pMemoria.pecas[numeroB].getHeight(), Image.SCALE_DEFAULT)));
				virada = false;
				
				if(imgB2[numeroB].equals(imgB2[guardaN])){
					
					verificaV2[numeroB] = true;
					
				}else{
					
					imgCapa = new ImageIcon("imgM/capa.jpg");
					controle.pMemoria.pecas[numeroB].setIcon(new ImageIcon(imgCapa.getImage().getScaledInstance(controle.pMemoria.pecas[numeroB].getWidth(),controle.pMemoria.pecas[numeroB].getHeight(), Image.SCALE_DEFAULT)));
					controle.pMemoria.pecas[guardaN].setIcon(new ImageIcon(imgCapa.getImage().getScaledInstance(controle.pMemoria.pecas[numeroB].getWidth(),controle.pMemoria.pecas[numeroB].getHeight(), Image.SCALE_DEFAULT)));
					verificaV2[guardaN] = false;
					
				}
				
			}
			
		}
		
	}
	
	//nivelis 3, 4 e 5
		String imgBT[] = new String[12];
		Boolean[] verificaVT = {false, false, false, false, false, false, false, false, false, false, false, false};
		
		public void outrosNiveis(){
			
			if(iniciou == false){
				
				iniciou = true;
				
				Random espalhar = new Random();
				
				int roda=0;
				
				while(roda<12){
				
					int roleta = espalhar.nextInt(11);
					
					int valida=0;
					
					for(int i=0; i<12; i++){
					
						if(i == roda){
							
							imgBT[i] = imgs[roleta];
							roda++;
							break;
							
						}
						
						if(imgBT[i].equals(imgs[roleta])){
							
							if(valida < 1){
								
								valida++;
								
							}else{
								
								break;
								
							}
							
						}
						
					}
					
				}	
				
			}
			
			//validação
			if(virada == false){

				if(verificaVT[numeroB] == false){
				
					ImageIcon imgCapa = new ImageIcon(imgBT[numeroB]);
					controle.pMemoria.pecas[numeroB].setIcon(new ImageIcon(imgCapa.getImage().getScaledInstance(controle.pMemoria.pecas[numeroB].getWidth(),controle.pMemoria.pecas[numeroB].getHeight(), Image.SCALE_DEFAULT)));
					virada = true;
					guardaN = numeroB;
					verificaVT[numeroB] = true;
				
				}
				
			}else{
				
				if(verificaVT[numeroB] == false){
					
					ImageIcon imgCapa = new ImageIcon(imgBT[numeroB]);
					controle.pMemoria.pecas[numeroB].setIcon(new ImageIcon(imgCapa.getImage().getScaledInstance(controle.pMemoria.pecas[numeroB].getWidth(),controle.pMemoria.pecas[numeroB].getHeight(), Image.SCALE_DEFAULT)));
					virada = false;
					
					if(imgBT[numeroB].equals(imgBT[guardaN])){
						
						verificaVT[numeroB] = true;
						
					}else{
						
						imgCapa = new ImageIcon("imgM/capa.jpg");
						controle.pMemoria.pecas[numeroB].setIcon(new ImageIcon(imgCapa.getImage().getScaledInstance(controle.pMemoria.pecas[numeroB].getWidth(),controle.pMemoria.pecas[numeroB].getHeight(), Image.SCALE_DEFAULT)));
						controle.pMemoria.pecas[guardaN].setIcon(new ImageIcon(imgCapa.getImage().getScaledInstance(controle.pMemoria.pecas[numeroB].getWidth(),controle.pMemoria.pecas[numeroB].getHeight(), Image.SCALE_DEFAULT)));
						verificaVT[guardaN] = false;
						
					}
					
				}
				
			}
			
		}
	
}
